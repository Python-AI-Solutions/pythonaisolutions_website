name: Deploy PR Preview

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches: [main]

permissions:
  contents: write
  pull-requests: write
  pages: write
  id-token: write

jobs:
  deploy-preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    if: github.event.action != 'closed'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.x

      - name: Install dependencies
        run: npm install

      - name: Validate team images exist
        run: npm run validate:images

      - name: Build application
        run: npm run build
        env:
          NODE_ENV: production
          # Set base path for GitHub Pages subdirectory
          BASE_PATH: /${{ github.event.repository.name }}/pr-preview/pr-${{ github.event.pull_request.number }}

      # Build already exports to 'out' directory due to output: 'export' in next.config
      # No need for separate export step

      - name: Deploy to GitHub Pages Preview
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./out
          destination_dir: pr-preview/pr-${{ github.event.pull_request.number }}

      - name: Comment PR with preview link
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prNumber = context.payload.pull_request.number;
            const sha = context.payload.pull_request.head.sha.substring(0, 7);
            const previewUrl = `https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/pr-preview/pr-${prNumber}/`;

            const comment = `## ðŸš€ Preview Deployed!

            **Preview URL:** ${previewUrl}

            **Commit:** \`${sha}\`
            **Status:** âœ… Ready

            This preview will be automatically updated when you push new commits.`;

            // Find existing comment
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
            });

            const botComment = comments.find(comment =>
              comment.user.type === 'Bot' &&
              comment.body.includes('Preview Deployed')
            );

            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: comment,
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: comment,
              });
            }

  cleanup-preview:
    name: Cleanup Preview
    runs-on: ubuntu-latest
    if: github.event.action == 'closed'

    steps:
      - name: Checkout gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages

      - name: Remove PR preview
        run: |
          if [ -d "pr-preview/pr-${{ github.event.pull_request.number }}" ]; then
            rm -rf pr-preview/pr-${{ github.event.pull_request.number }}
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add .
            git commit -m "Remove preview for PR #${{ github.event.pull_request.number }}"
            git push
          fi
