# Cloudflare Pages Deployment
#
# Prerequisites (managed in parent cloudflare-management repo):
# - Cloudflare Pages project "pythonaisolutions-website" created via Terraform
# - DNS CNAME www.pythonaisolutions.com ‚Üí pythonaisolutions-website.pages.dev
# - Custom domain configured in Pages project
#
# GitHub secret required:
# - CF_API_KEY: Cloudflare API token with Pages Edit permission

name: Deploy to Cloudflare Pages

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read
  deployments: write

env:
  PROJECT_NAME: pythonaisolutions-website
  BUILD_DIR: out

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies with retry
        run: |
          for i in 1 2 3; do
            npm install && break || sleep 10
          done

      - name: Type check
        run: npm run typecheck

      - name: Lint
        run: npm run lint

      - name: Run tests
        run: npm run test:ci

      - name: Validate team images exist
        run: npm run validate:images

      - name: Build static site
        run: npm run build
        env:
          NODE_ENV: production

      - name: Check build output
        run: |
          if [ -d "$BUILD_DIR" ]; then
            echo "‚úÖ Build successful - $BUILD_DIR directory exists"
            echo "Build size: $(du -sh $BUILD_DIR | cut -f1)"
          else
            echo "‚ùå Build failed - $BUILD_DIR directory not found"
            exit 1
          fi

      - name: Validate assets
        run: |
          echo "üîç Running asset validation..."
          npm run check-assets
          echo "‚úÖ Asset validation completed successfully"

      - name: Security scan of build output
        run: |
          echo "üõ°Ô∏è Scanning build output for security issues..."
          find $BUILD_DIR -type f \( -name "*.js" -o -name "*.html" -o -name "*.css" \) | \
            xargs grep -l -i -E "(api[_-]?key|secret|password|token)" || echo "No secrets detected in build"

          find $BUILD_DIR -name "*.html" | xargs grep -h -o 'src="http://[^"]*"' | \
            sed 's/src="//;s/"//' | sort | uniq | while read -r url; do
              echo "‚ö†Ô∏è  Insecure HTTP resource found: $url"
            done || echo "No insecure HTTP resources found"

      - name: Install wrangler
        run: npm install -g wrangler

      - name: Deploy preview
        if: ${{ github.event_name == 'pull_request' }}
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_KEY }}
        run: wrangler pages deploy ./${{ env.BUILD_DIR }} --project-name ${{ env.PROJECT_NAME }} --branch ${{ github.head_ref }}

      - name: Deploy production
        if: ${{ github.event_name == 'push' }}
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_KEY }}
        run: wrangler pages deploy ./${{ env.BUILD_DIR }} --project-name ${{ env.PROJECT_NAME }} --branch main --commit-dirty=true
